@page "/cities"
@using System.Text.Json
@using System.Text.Json.Serialization;
@inject IHttpClientFactory ClientFactory

<h1>Get all Cities</h1>

@if (getCitiesError)
{
  <p>Unable to get Cities from API. Please try again later.</p>
}
else
{
  <ul>
  @foreach (var city in cities)
    {
      <li>
        @city.Name
        @city.Id
        @city.State
        @city.Description
      </li>
    }
  </ul>
}

<div class="container">
  <form action="http://localhost:4000/api/Cities" method="post" enctype="text/plain">
    <label for="Name">Name</label>
    <input type="text" required="required" name="Name" id="name" />
    <label for="Description">Description</label>
    <input type="text" required="required" name="Description" id="Description" />
    <label for="State">State</label>
    <input type="text" required="required" name="State" id="State" />
    <button type="submit" class="btn btn-block btn-primary">Submit</button>
  </form>
</div>

@code {
  private IEnumerable<City> cities = Array.Empty<City>();
  private bool getCitiesError;
  private bool shouldRender;
  protected override bool ShouldRender() => shouldRender;

  protected override async Task OnInitializedAsync()
  {
    var request = new HttpRequestMessage(HttpMethod.Get,
    "http://localhost:4000/api/Cities");
    request.Headers.Add("Accept", "application/json");
    request.Headers.Add("Accept", "text/plain");
    request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

    var client = ClientFactory.CreateClient();

    var response = await client.SendAsync(request);

    if (response.IsSuccessStatusCode)
    {
      using var responseStream = await response.Content.ReadAsStreamAsync();
      cities = await JsonSerializer.DeserializeAsync
      <IEnumerable<City>>(responseStream);
    }
    else
    {
      getCitiesError = true;
    }

    shouldRender = true;
  }

  public class City
  {
    [JsonPropertyName("name")]
    public string Name { get; set; }
    [JsonPropertyName("id")]

    public string Id { get; set; }
    [JsonPropertyName("description")]
    public string Description { get; set; }
    [JsonPropertyName("state")]
    public string State { get; set; }
  }
}
